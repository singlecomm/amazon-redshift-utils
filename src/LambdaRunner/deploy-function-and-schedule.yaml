AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Parameters:
  UtilityName:
    Default: AnalyzeVacuumUtility
    Description: Utility to run with this instance of the Scheduled Event
    Type: String
    AllowedValues:
      - AnalyzeVacuumUtility
      - ColumnEncodingUtility
  S3ConfigPath:
    Default: s3://my-bucket/prefix/config-file.json
    Description: Configuration File for this Utility instance
    Type: String
    AllowedPattern: ^s3:\/\/([A-z\-]+)\/(.*)$
  CronExpression:
    Default: 0 0 * * ? *
    Description: Cron expression indicating how frequently to run the specified utility (default is once a day at midnight)
    Type: String
    AllowedPattern: ^([0-59]|\*|\,|\-|\/) ([0-59]|\*|\,|\-|\/) ([0-59]|\*|\,|\-|\/|\?|L|W) ([0-59]|\*|\,|\-|\/) ([0-59]|\*|\,|\-|\/|\?|L|\#) ([0-59]|\*|\,|\-|\/)$
Resources:
  ScheduledFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: lambda_function.event_handler
      Runtime: python2.7
      CodeUri:         
        Bucket: !Sub awslabs-code-${AWS::Region}
        Key: LambdaRedshiftRunner/lambda-redshift-util-runner-1.1.zip
      MemorySize: 192
      Timeout: 300
      Tags:
        Name: LambdaRedshiftRunner
      Role: !GetAtt ScheduledServiceIAMRole.Arn
      Events:
        Timer:
          Type: Schedule
          Properties:
            Schedule: !Sub cron(${CronExpression})
            Input: 
              !Sub | 
                {
                  "ExecuteUtility":"${UtilityName}",
                  "ConfigLocation":"${S3ConfigPath}"
                }
  ScheduledServiceIAMRole:
    Type: "AWS::IAM::Role"
    Properties:
        RoleName: "LambdaRedshiftRunnerRole"
        Path: "/"
        ManagedPolicyArns:
            - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
            - "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            -
              Sid: "AllowLambdaServiceToAssumeRole"
              Effect: "Allow"
              Action:
                - "sts:AssumeRole"
              Principal:
                Service:
                  - "lambda.amazonaws.com"
        Policies:
          -
            PolicyName: "LambdaRedshiftRunnerPolicy"
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                -
                  Effect: "Allow"
                  Action:
                    - "s3:GetObject"
                    - "kms:Decrypt"
                  Resource: "*"